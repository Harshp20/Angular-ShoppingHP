{"version":3,"file":"require-new-password.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/require-new-password-component/require-new-password.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,eAAe,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,OAAO,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AAE5D,IAAM,QAAQ,GAAG,4GAEgC,IAAI,CAAC,kBAAkB,CAAC,OAAO,4DAClC,IAAI,CAAC,kBAAkB,CAAC,WAAW,8DACjC,IAAI,CAAC,kBAAkB,CAAC,aAAa,qhBAalE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,wNAOpC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,sPAMxC,IAAI,CAAC,kBAAkB,CAAC,YAAY,0cAc1D,CAAC;;IAaD,yCAA2C;QAAA,mBAAc,GAAd,cAAc;oBAU/B,EAAE;QAT3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,6BAA6B,CAAC,CAAC;KACxE;0BAGG,sDAAS;uBAAC,SAAoB;YACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,KAAK,oBAAoB,CAAC;;;;;0BAMnD,iDAAI;uBAAC,IAAS;YACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,oBAAoB,CAAC;YAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;;;IAG/C,kDAAQ,GAAR;QACC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SACzE;KACD;IAED,oDAAU,GAAV,UAAW,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,IAAI,EAAb,CAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAC1D;IAED,qDAAW,GAAX,UAAY,QAAgB;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KACzB;IAED,kDAAQ,GAAR;QAAA,iBAWC;QAVQ,IAAA,2BAAI,CAAqB;QACzB,IAAA,2DAAkB,CAAyB;QACnD,IAAI,CAAC,cAAc;aACjB,IAAI,EAAE;aACN,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC;aAC5D,IAAI,CAAC;YACL,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;SAC5D,CAAC;aACD,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;KACpC;IAED,kDAAQ,GAAR;QACC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;KAClE;IAED,sDAAY,GAAZ;QACC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,mDAAS,GAAT,UAAU,GAAG;QACZ,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO;SACP;QAED,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC;KACvC;;gBAzED,SAAS,SAAC;oBACV,QAAQ,EAAE,wCAAwC;oBAClD,QAAQ,UAAA;iBACR;;;;gBArDQ,cAAc,uBA6DT,MAAM,SAAC,cAAc;;;8BAIjC,KAAK;yBAML,KAAK;yBAEL,KAAK;;0CAzFP;;SAsEa,+BAA+B","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"${auth.requireNewPassword.section}\">\n  <div class=\"amplify-form-body\" data-test=\"${auth.requireNewPassword.bodySection}\">\n  <div class=\"amplify-form-header\" data-test=\"${auth.requireNewPassword.headerSection}\">\n    {{ this.amplifyService.i18n().get('You are required to update your password') }}\n  </div>\n  <div class=\"amplify-form-row\">\n    <label class=\"amplify-input-label\" for=\"password\">\n      {{ this.amplifyService.i18n().get('Password *') }}\n    </label>\n    <input #password\n      (keyup)=\"setPassword(password.value)\"\n      (keyup.enter)=\"onSubmit()\"\n      class=\"amplify-form-input\"\n      type=\"password\"\n      placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n      data-test=\"${auth.requireNewPassword.newPasswordInput}\"\n    />\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <a class=\"amplify-form-link\"\n          (click)=\"onSignIn()\"\n          data-test=\"${auth.requireNewPassword.backToSignInLink}\"\n        >{{ this.amplifyService.i18n().get('Back to Sign In') }}</a>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button class=\"amplify-form-button\"\n          (click)=\"onSubmit()\"\n          data-test=\"${auth.requireNewPassword.submitButton}\"\n        >{{ this.amplifyService.i18n().get('Submit') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n<div class=\"amplify-alert-body\">\n  <span class=\"amplify-alert-icon\">&#9888;</span>\n  <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n  <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n</div>\n</div>\n</div>\n`;\n\n@Component({\n\tselector: 'amplify-auth-require-new-password-core',\n\ttemplate,\n})\nexport class RequireNewPasswordComponentCore implements OnInit {\n\t_authState: AuthState;\n\t_show: boolean;\n\tpassword: string;\n\terrorMessage: string;\n\tprotected logger: any;\n\n\tconstructor(@Inject(AmplifyService) public amplifyService: AmplifyService) {\n\t\tthis.logger = this.amplifyService.logger('RequireNewPasswordComponent');\n\t}\n\n\t@Input()\n\tset authState(authState: AuthState) {\n\t\tthis._authState = authState;\n\t\tthis._show = authState.state === 'requireNewPassword';\n\t}\n\n\t@Input() hide: string[] = [];\n\n\t@Input()\n\tset data(data: any) {\n\t\tthis._authState = data.authState;\n\t\tthis._show = data.authState.state === 'requireNewPassword';\n\t\tthis.hide = data.hide ? data.hide : this.hide;\n\t}\n\n\tngOnInit() {\n\t\tif (!this.amplifyService.auth()) {\n\t\t\tthrow new Error('Auth module not registered on AmplifyService provider');\n\t\t}\n\t}\n\n\tshouldHide(comp) {\n\t\treturn this.hide.filter(item => item === comp).length > 0;\n\t}\n\n\tsetPassword(password: string) {\n\t\tthis.password = password;\n\t}\n\n\tonSubmit() {\n\t\tconst { user } = this._authState;\n\t\tconst { requiredAttributes } = user.challengeParam;\n\t\tthis.amplifyService\n\t\t\t.auth()\n\t\t\t.completeNewPassword(user, this.password, requiredAttributes)\n\t\t\t.then(() => {\n\t\t\t\tthis.onAlertClose();\n\t\t\t\tthis.amplifyService.setAuthState({ state: 'signIn', user });\n\t\t\t})\n\t\t\t.catch(err => this._setError(err));\n\t}\n\n\tonSignIn() {\n\t\tthis.onAlertClose();\n\t\tthis.amplifyService.setAuthState({ state: 'signIn', user: null });\n\t}\n\n\tonAlertClose() {\n\t\tthis._setError(null);\n\t}\n\n\t_setError(err) {\n\t\tif (!err) {\n\t\t\tthis.errorMessage = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.errorMessage = err.message || err;\n\t}\n}\n"]}