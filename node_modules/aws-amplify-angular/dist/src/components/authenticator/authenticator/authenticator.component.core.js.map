{"version":3,"file":"authenticator.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/authenticator/authenticator.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAA6B,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAa,MAAM,oBAAoB,CAAC;AAE/D,IAAM,QAAQ,GAAG,ojDAiDhB,CAAC;;IAcD,oCAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;yBAP1B;YACtB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,IAAI;SACV;6BACoB,EAAE;mCACO,UAAU;oBA2BvB,EAAE;QAxBlB,IAAI,CAAC,SAAS,EAAE,CAAC;KACjB;IAED,6CAAQ,GAAR;QAAA,iBAkBC;QAjBA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SACzE;aAAM;YACN,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc;iBACpC,IAAI,EAAE;iBACN,wBAAwB,EAAE;iBAC1B,IAAI,CAAC,UAAA,IAAI;gBACT,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,EAAE;oBAC/C,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;iBAC9D;aACD,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACP,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,EAAE;oBACvC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClE;aACD,CAAC,CAAC;SACJ;KACD;0BAMG,4CAAI;uBAAC,IAAS;YACjB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;aACvC;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aACtB;YAED,IAAI,CAAC,mBAAmB;gBACvB,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,mBAAmB,IAAI,UAAU,CAAC;;;;;0BAIhE,oDAAY;uBAAC,YAAiB;YACjC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;;;;0BAI/B,0DAAkB;uBAAC,kBAA0B;YAChD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,IAAI,UAAU,CAAC;;;;;IAG7D,8CAAS,GAAT;QAAA,iBAYC;QAXA,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAC7C,UAAA,KAAK;YACJ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACvB,EACD;YACC,KAAI,CAAC,SAAS,GAAG;gBAChB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,IAAI;aACV,CAAC;SACF,CACD,CAAC;KACF;IAED,+CAAU,GAAV,UAAW,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,IAAI,EAAb,CAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAC1D;;gBA9ED,SAAS,SAAC;oBACV,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,UAAA;iBACR;;;;gBAxDQ,cAAc;;;yBAyFrB,KAAK;yBAGL,KAAK;iCAaL,KAAK;uCAKL,KAAK;;qCA9HP;;SAyEa,0BAA0B","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, ViewEncapsulation, OnInit } from '@angular/core';\nimport { AmplifyService, AuthState } from '../../../providers';\n\nconst template = `\n  <div class=\"amplify-authenticator\">\n    <amplify-auth-sign-in-core\n      *ngIf=\"!shouldHide('SignIn')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-sign-in-core>\n\n    <amplify-auth-sign-up-core\n      *ngIf=\"!shouldHide('SignUp')\"\n      [authState]=\"authState\"\n      [signUpConfig]=\"_signUpConfig\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-sign-up-core>\n\n    <amplify-auth-confirm-sign-up-core\n      *ngIf=\"!shouldHide('ConfirmSignUp')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-confirm-sign-up-core>\n\n    <amplify-auth-confirm-sign-in-core\n      *ngIf=\"!shouldHide('ConfirmSignIn')\"\n      [authState]=\"authState\"\n      [hide]=\"hide\"\n    ></amplify-auth-confirm-sign-in-core>\n\n    <amplify-auth-forgot-password-core\n      *ngIf=\"!shouldHide('ForgotPassword')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-forgot-password-core>\n\n    <amplify-auth-greetings-core\n    *ngIf=\"!shouldHide('Greetings')\"\n    [authState]=\"authState\"\n    [usernameAttributes]=\"_usernameAttributes\"\n    ></amplify-auth-greetings-core>\n\n     <amplify-auth-require-new-password-core\n      *ngIf=\"!shouldHide('RequireNewPassword')\"\n      [authState]=\"authState\"\n      [hide]=\"hide\"\n    ></amplify-auth-require-new-password-core>\n  </div>\n`;\n\n@Component({\n\tselector: 'amplify-authenticator-core',\n\ttemplate,\n})\nexport class AuthenticatorComponentCore implements OnInit {\n\tauthState: AuthState = {\n\t\tstate: 'loading',\n\t\tuser: null,\n\t};\n\t_signUpConfig: any = {};\n\t_usernameAttributes: string = 'username';\n\n\tconstructor(public amplifyService: AmplifyService) {\n\t\tthis.subscribe();\n\t}\n\n\tngOnInit() {\n\t\tif (!this.amplifyService.auth()) {\n\t\t\tthrow new Error('Auth module not registered on AmplifyService provider');\n\t\t} else {\n\t\t\tconst loadStatus = this.amplifyService\n\t\t\t\t.auth()\n\t\t\t\t.currentAuthenticatedUser()\n\t\t\t\t.then(user => {\n\t\t\t\t\tif (this.authState.state === 'loading' && user) {\n\t\t\t\t\t\tthis.amplifyService.setAuthState({ state: 'signedIn', user });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tif (this.authState.state === 'loading') {\n\t\t\t\t\t\tthis.amplifyService.setAuthState({ state: 'signIn', user: null });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\n\t@Input()\n\thide: string[] = [];\n\n\t@Input()\n\tset data(data: any) {\n\t\tif (data.signUpConfig) {\n\t\t\tthis._signUpConfig = data.signUpConfig;\n\t\t}\n\t\tif (data.hide) {\n\t\t\tthis.hide = data.hide;\n\t\t}\n\n\t\tthis._usernameAttributes =\n\t\t\tdata.usernameAttributes || this._usernameAttributes || 'username';\n\t}\n\n\t@Input()\n\tset signUpConfig(signUpConfig: any) {\n\t\tthis._signUpConfig = signUpConfig;\n\t}\n\n\t@Input()\n\tset usernameAttributes(usernameAttributes: string) {\n\t\tthis._usernameAttributes = usernameAttributes || 'username';\n\t}\n\n\tsubscribe() {\n\t\tthis.amplifyService.authStateChange$.subscribe(\n\t\t\tstate => {\n\t\t\t\tthis.authState = state;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.authState = {\n\t\t\t\t\tstate: 'signIn',\n\t\t\t\t\tuser: null,\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n\n\tshouldHide(comp) {\n\t\treturn this.hide.filter(item => item === comp).length > 0;\n\t}\n}\n"]}