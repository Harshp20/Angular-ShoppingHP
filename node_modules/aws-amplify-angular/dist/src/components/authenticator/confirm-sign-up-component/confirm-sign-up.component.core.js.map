{"version":3,"file":"confirm-sign-up.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/confirm-sign-up-component/confirm-sign-up.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { labelMap } from '../common';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n<div class=\"amplify-form-container\" data-test=\"${auth.confirmSignUp.section}\">\n  <div class=\"amplify-form-body\" data-test=\"${auth.confirmSignUp.bodySection}\">\n    <div\n      class=\"amplify-form-header\"\n      data-test=\"${auth.confirmSignUp.headerSection}\"\n    >\n      {{ this.amplifyService.i18n().get('Confirm Sign up') }}</div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"amplifyUsername\">\n        {{ this.amplifyService.i18n().get(getUsernameLabel()) }}\n      </label>\n      <input\n        #amplifyUsername\n        class=\"amplify-form-input\"\n        type=\"text\"\n        disabled\n        placeholder=\"{{ this.amplifyService.i18n().get(getUsernameLabel()) }}\"\n        [value]=\"username\"\n        data-test=\"${auth.confirmSignUp.usernameInput}\"\n      />\n    </div>\n    <div class=\"amplify-form-row\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (change)=\"setCode(code.value)\"\n        (keyup)=\"setCode(code.value)\"\n        (keyup.enter)=\"onConfirm()\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter your Code') }}\"\n        data-test=\"${auth.confirmSignUp.confirmationCodeInput}\"\n      />\n      <span class=\"amplify-form-action\">{{ this.amplifyService.i18n().get('Lost your code?') }}\n        <a class=\"amplify-form-link\"\n            (click)=\"onResend()\"\n            data-test=\"${auth.confirmSignUp.resendCodeLink}\"\n          >{{ this.amplifyService.i18n().get('Resend Code') }}</a></span>\n    </div>\n    <div class=\"amplify-form-actions\">\n      <div class=\"amplify-form-cell-left\">\n        <div class=\"amplify-form-actions-left\">\n          <a\n            class=\"amplify-form-link\"\n            (click)=\"onSignIn()\"\n            data-test=\"${auth.confirmSignUp.backToSignInLink}\"\n            >\n            {{ this.amplifyService.i18n().get('Back to Sign in') }}\n          </a>\n        </div>\n      </div>\n      <div class=\"amplify-form-cell-right\">\n        <button\n          class=\"amplify-form-button\"\n          (click)=\"onConfirm()\"\n          data-test=\"${auth.confirmSignUp.confirmButton}\"\n          >{{ this.amplifyService.i18n().get('Confirm') }}</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n  <div class=\"amplify-alert-body\">\n    <span class=\"amplify-alert-icon\">&#9888;</span>\n    <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n    <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n  </div>\n</div>\n</div>\n`;\n\n@Component({\n\tselector: 'amplify-auth-confirm-sign-up-core',\n\ttemplate,\n})\nexport class ConfirmSignUpComponentCore implements OnInit {\n\t_authState: AuthState;\n\t_show: boolean;\n\t_usernameAttributes: string = 'username';\n\tusername: string;\n\tcode: string;\n\terrorMessage: string;\n\tprotected logger: any;\n\n\tconstructor(@Inject(AmplifyService) public amplifyService: AmplifyService) {\n\t\tthis.logger = this.amplifyService.logger('ConfirmSignUpComponent');\n\t}\n\n\t@Input()\n\tset data(data: any) {\n\t\tthis.hide = data.hide ? data.hide : this.hide;\n\t\tthis._authState = data.authState;\n\t\tthis._show = data.authState.state === 'confirmSignUp';\n\t\tthis.username = data.authState.user\n\t\t\t? data.authState.user.username || ''\n\t\t\t: '';\n\t}\n\n\t@Input() hide: string[] = [];\n\n\t@Input()\n\tset authState(authState: AuthState) {\n\t\tthis._authState = authState;\n\t\tthis._show = authState.state === 'confirmSignUp';\n\n\t\tthis.username = authState.user ? authState.user.username || '' : '';\n\t}\n\n\t@Input()\n\tset usernameAttributes(usernameAttributes: string) {\n\t\tthis._usernameAttributes = usernameAttributes;\n\t}\n\n\tngOnInit() {\n\t\tif (!this.amplifyService.auth()) {\n\t\t\tthrow new Error('Auth module not registered on AmplifyService provider');\n\t\t}\n\t}\n\tshouldHide(comp) {\n\t\treturn this.hide.filter(item => item === comp).length > 0;\n\t}\n\n\tsetUsername(username: string) {\n\t\tthis.username = username;\n\t}\n\n\tsetCode(code: string) {\n\t\tthis.code = code;\n\t}\n\n\tonConfirm() {\n\t\tthis.amplifyService\n\t\t\t.auth()\n\t\t\t.confirmSignUp(this.username, this.code)\n\t\t\t.then(() => this.logger.info('confirm success'))\n\t\t\t.catch(err => this._setError(err));\n\t}\n\n\tonResend() {\n\t\tthis.amplifyService\n\t\t\t.auth()\n\t\t\t.resendSignUp(this.username)\n\t\t\t.then(() => this.logger.info('code resent'))\n\t\t\t.catch(err => this._setError(err));\n\t}\n\n\tonSignIn() {\n\t\tthis.onAlertClose();\n\t\tthis.amplifyService.setAuthState({ state: 'signIn', user: null });\n\t}\n\n\tonAlertClose() {\n\t\tthis._setError(null);\n\t}\n\n\t_setError(err) {\n\t\tif (!err) {\n\t\t\tthis.errorMessage = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.errorMessage = err.message || err;\n\t}\n\n\tgetUsernameLabel() {\n\t\treturn (\n\t\t\tlabelMap[this._usernameAttributes as string] || this._usernameAttributes\n\t\t);\n\t}\n}\n"]}